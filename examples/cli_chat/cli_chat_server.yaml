---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: cli-chat-server
spec:
  ports:
    - port: 8765
      targetPort: 8765
  selector:
    app: cli-chat-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cli-chat-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cli-chat-server
  template:
    metadata:
      labels:
        app: cli-chat-server
    spec:
      containers:
        - name: cli-chat-server
          image: cli-chat-server:latest
          imagePullPolicy: Never  # Use this when building with minikube's docker daemon
          ports:
            - containerPort: 8765
          env:
            - name: BROKER
              value: "redis"
          volumeMounts:
            - name: chat-history
              mountPath: /data
      volumes:
        - name: chat-history
          persistentVolumeClaim:
            claimName: chat-history-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cli-chat-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/websocket-services: "cli-chat-server"
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cli-chat-server
                port:
                  number: 8765 
